# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package to TestPyPI

on:
  push:
    branches:
      - main # Or your main development branch

permissions:
  contents: read

jobs:
  main-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
          
      - name: Build package
        run: |
          python -m build

      # - name: Upload distribution
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: release-dists
      #     path: dist/

  publish:
    runs-on: ubuntu-latest
    needs:
      - main-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: testpypi
      url: https://testpypi.org/project/dplvn
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.pypi-AgENdGVzdC5weXBpLm9yZwIkMzJmYjg2N2QtYzc0Ni00NjljLThmNGUtOWI0NzA3NWM4M2NkAAIqWzMsIjcxZTFhYmFkLTg3NTktNDdhOC05NDgwLTg3OTAyNzYyZGM2MiJdAAAGIG2Oy2iZTX0nWmdrsH1kfATaNHHWMAh-vyEUQF3sxwIm }}
          skip_existing: true # Optional: prevents errors if package already exists
